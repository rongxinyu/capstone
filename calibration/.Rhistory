source('~/test.r', echo=TRUE)
debugSource('~/test.r', echo=TRUE)
Gamma
W
W[,1]
rev(W[,1])
debugSource('~/test.r', echo=TRUE)
source('~/test.r', echo=TRUE)
source('~/test.r', echo=TRUE)
debugSource('~/test.r', echo=TRUE)
Y2
debugSource('~/test.r', echo=TRUE)
Y2
sapply(seq(1,floor(n*T)), function(x){Myconvolve(Gamma, W[,1], x)})
convolve(Gamma, W[,1])[1:floor(n*T)]
convolve(Gamma, W[,1])
length(Gamma)
length(W[,1])
convolve(Gamma, W[,1])
Gamma
W[,1]
convolve(Gamma, W[,1], type='f')
convolve(Gamma, W[,1], type="f")
convolve(Gamma, W[,1], type="filter")
convolve(Gamma, W[,1], type="c")
convolve(Gamma, W[,1], type="open")
Y2
convolve(Gamma, W[,1], type="circular")
convolve(Gamma, W[,1], type="filter")
convolve(Gamma, W[,1], False, type="open")
convolve(Gamma, W[,1], FALSE, type="open")
convolve([1, 2, 3], [0, 1, 0.5])
convolve(c(1, 2, 3),c(0, 1, 0.5)
)
convolve(c(1, 2, 3),c(0, 1, 0.5), type="o")
convolve(c(1, 2, 3),rev(c(0, 1, 0.5)), type="o")
Y2
convolve(Gamma, rev(W[,1]), type="open")
convolve(Gamma, rev(W[,1]), type="open")[1:floor(n*T)]
source('~/test.r', echo=TRUE)
source('~/test.r', echo=TRUE)
source('~/test.r', echo=TRUE)
source('~/test.r', echo=TRUE)
source('~/test.r', echo=TRUE)
source('~/test.r', echo=TRUE)
help(sapply)
source('~/test.r', echo=TRUE)
source('~/test.r', echo=TRUE)
source('~/test.r', echo=TRUE)
source('~/test.r', echo=TRUE)
source('~/test.r', echo=TRUE)
source('~/test.r', echo=TRUE)
source('~/test.r', echo=TRUE)
a = c(1,2)
rep(a)
rep(a,4)
a * 3
[]
[a] * 6
rep(c(a),4)
setwd("~/capstone")
source('~/capstone/calibration/main.R', echo=TRUE)
setwd("~/capstone/calibration")
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/bssFit.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
paths<-1
paths<-10
n<-400
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
0
paths<-1000
n<-400
bssfit0 <- bssFit(spxOptData, paths, n, kappa=1)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
debugSource('~/capstone/calibration/bssFit.R', echo=TRUE)
debugSource('~/capstone/calibration/bssFit.R', echo=TRUE)
debugSource('~/capstone/calibration/bssFit.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/bssFit.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
View(sviRoots)
View(sviRoots)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/bssFit.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/hybrid_bss.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/bssFit.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/bssFit.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/bssFit.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
paths<-1000
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
? optimize
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/bssFit.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
rm(list=ls())
load("spxOptionMetrics.rData")
#head(spxData050915)
library(stinepack)
source("BlackScholes.R")
source("plotSVI.R")
source("sviJW.R")
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/bssFit.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
getwd()
source('~/capstone/calibration/main.R', echo=TRUE)
plotIvols_BSS(ivolData=spxOptData, paths=1e3, n=400, bssMatrix=bssfit0, kappa=1, sviMatrix=svifit0)
plotIvols_BSS(ivolData=spxOptData, paths=1e3, n=400, bssMatrix=bssfit0, kappa=1, sviMatrix=svifit0)
bssfit0 <- bssFit(spxOptData, paths, n, kappa=1)
bssMatrix <- as.data.frame(bssMatrix);
bssFit(spxOptData, paths, n, kappa=1)
bidVols <- as.numeric(ivolData$Bid);
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
svifit0 <- sviFit(spxOptData)
plotIvols_BSS(ivolData=spxOptData, paths=1e3, n=400, bssMatrix=bssfit0, kappa=1, sviMatrix=svifit0)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
head(spxData050915)
spxOptData
head(spxOptData, 205)
source('~/capstone/calibration/main.R', echo=TRUE)
spxOptData
tail(spxOptData, 50)
tail(spxOptData, 48)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/bssFit.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
spxOptData
spxOptData[233:264, ]
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
source('~/capstone/calibration/main.R', echo=TRUE)
plotIvols_svibss(ivolData = spxOptData, sviMatrix = svifitQR)
download.file(url="http://mfe.baruch.cuny.edu/wp-content/uploads/2014/09/spxOptionMetrics.rData_.zip", destfile="spxOptionMetrics.rData.zip")
unzip(zipfile="spxOptionMetrics.rData.zip")
load("spxOptionMetrics.rData")
source('~/capstone/calibration/main.R', echo=TRUE)
plotIvols_svibss(ivolData=spxOptData, paths=paths, n=400,
bssMatrix=bssMatrix,  kappa=1, sviMatrix=svifitQR)
plotIvols_svibss(spxOptData)
source('~/capstone/calibration/main.R', echo=TRUE)
plotIvols_svibss(spxOptData)
source("BlackScholes.R")
source("optionMetricsToIvols.R")
source("sviFit0.R")
source("svi.R")
source('sviarbitrage.R')
source('sviRoots.R')
source('sviSqrtFit.R')
source("computeImpliedVols.R")
source("sviFitQuarticRoots.R")
source("sviVolSurface.R")
source('plotIvols_svibss.R')
source('hybrid_bss.R')
source('bssFit.R')
source('bss.R')
source('bssHistFit.R')
bssparams <- list(S0=1, xi=0.235^2, eta=1.9, alpha=-0.43, rho=-0.9)
finalPrices<- hybridScheme(bssparams)(1e4, 200, 1, 0.041)
source('~/capstone/calibration/main.R', echo=TRUE)
params <- list(S0=1, xi=0.235^2, eta=1.9, alpha=-0.43, rho=-0.9)
finalPrices<- hybridScheme(params)(1e4, 200, 1, 0.041)
k<-5
clr<- rainbow(k)
finalP<- list()
for (i in 1:k){
param<- params
param$xi<- (sqrt(param$xi)+0.01*i)^2
#print(i)
finalP[[i]]<- hybridScheme(param)(paths, n,1,T)
}
save(finalP, file='finalP_xi.rData')
curve(vol(x, finalPrices), from=-0.13, to=0.1, col='black',
xlab="Log strike", ylab="Implied Vol", ylim= c(0.1, 0.55) ,lwd=2)
print(vol(0, finalPrices))
for (i in 1:k){
curve(vol(x, finalP[[i]]),from=-0.15, to=0.1, add=TRUE, col=clr[i], lwd=2)
}
legend=c ('xi= 0.235^2',
legend( 'topright',
print(vol(0, finalP[[i]]))
'xi= 0.245^2',
'xi= 0.255^2',
'xi= 0.265^2',
'xi= 0.275^2',
'xi= 0.285^2'),
col = c('black', clr), lty=1)
title( 'Sensitivity on Xi')
for (i in 1:k){
curve(vol(x, finalP[[i]]),from=-0.15, to=0.1, add=TRUE, col=clr[i], lwd=2)
print(vol(0, finalP[[i]]))
}
curve(ImpliedVol(x, finalPrices), from=-0.13, to=0.1, col='black',
xlab="Log strike", ylab="Implied Vol", ylim= c(0.1, 0.55) ,lwd=2)
print(ImpliedVol(0, finalPrices))
for (i in 1:k){
curve(ImpliedVol(x, finalP[[i]]),from=-0.15, to=0.1, add=TRUE, col=clr[i], lwd=2)
print(ImpliedVol(0, finalP[[i]]))
}
curve(ImpliedVol(x, finalPrices), from=-0.4, to=0.2, col='black',
xlab="Log strike", ylab="Implied Vol", ylim= c(0.1, 0.55) ,lwd=2)
print(ImpliedVol(0, finalPrices))
for (i in 1:k){
curve(ImpliedVol(x, finalP[[i]]),from=-0.15, to=0.1, add=TRUE, col=clr[i], lwd=2)
print(ImpliedVol(0, finalP[[i]]))
}
legend( 'topright',
legend=c ('xi= 0.235^2',
curve(ImpliedVol(x, finalPrices), from=-0.4, to=0.2, col='black',
xlab="Log strike", ylab="Implied Vol", ylim= c(0.1, 0.55) ,lwd=2)
print(ImpliedVol(0, finalPrices))
for (i in 1:k){
curve(ImpliedVol(x, finalP[[i]]),from=-0.15, to=0.1, add=TRUE, col=clr[i], lwd=2)
print(ImpliedVol(0, finalP[[i]]))
}
legend( 'topright',
legend=c ('xi= 0.235^2',
'xi= 0.245^2',
'xi= 0.255^2',
'xi= 0.265^2',
'xi= 0.275^2',
'xi= 0.285^2'),
col = c('black', clr), lty=1)
title( 'Sensitivity on Xi')
curve(ImpliedVol(x, finalPrices), from=-0.4, to=0.2, col='black',
xlab="Log strike", ylab="Implied Vol", ylim= c(0.1, 0.55) ,lwd=2)
print(ImpliedVol(0, finalPrices))
for (i in 1:k){
curve(ImpliedVol(x, finalP[[i]]),from=-0.15, to=0.1, add=TRUE, col=clr[i], lwd=2)
print(ImpliedVol(0, finalP[[i]]))
}
legend( 'topright',
params <- list(S0=1, xi=0.235^2, eta=1.9, alpha=-0.43, rho=-0.9)
finalPrices<- hybridScheme(params)(1e4, 200, 1, 0.041)
k<-5
clr<- rainbow(k)
finalP<- list()
for (i in 1:k){
param<- params
param$xi<- (sqrt(param$xi)+0.01*i)^2
#print(i)
finalP[[i]]<- hybridScheme(param)(paths, n,1,T)
}
save(finalP, file='finalP_xi.rData')
curve(ImpliedVol(x, finalPrices), from=-0.4, to=0.2, col='black',
xlab="Log strike", ylab="Implied Vol", ylim= c(0.1, 0.55) ,lwd=2)
print(ImpliedVol(0, finalPrices))
for (i in 1:k){
curve(ImpliedVol(x, finalP[[i]]),from=-0.15, to=0.1, add=TRUE, col=clr[i], lwd=2)
print(ImpliedVol(0, finalP[[i]]))
}
legend( 'topright',
legend=c ('xi= 0.235^2',
'xi= 0.245^2',
'xi= 0.255^2',
'xi= 0.265^2',
'xi= 0.275^2',
'xi= 0.285^2'),
col = c('black', clr), lty=1)
title( 'Sensitivity on Xi')
T<-0.041
params <- list(S0=1, xi=0.235^2, eta=1.9, alpha=-0.43, rho=-0.9)
finalPrices<- hybridScheme(params)(1e4, 200, 1, 0.041)
k<-5
clr<- rainbow(k)
finalP<- list()
for (i in 1:k){
param<- params
param$xi<- (sqrt(param$xi)+0.01*i)^2
#print(i)
finalP[[i]]<- hybridScheme(param)(paths, n,1,T)
}
save(finalP, file='finalP_xi.rData')
curve(ImpliedVol(x, finalPrices), from=-0.4, to=0.2, col='black',
xlab="Log strike", ylab="Implied Vol", ylim= c(0.1, 0.55) ,lwd=2)
print(ImpliedVol(0, finalPrices))
for (i in 1:k){
curve(ImpliedVol(x, finalP[[i]]),from=-0.15, to=0.1, add=TRUE, col=clr[i], lwd=2)
print(ImpliedVol(0, finalP[[i]]))
}
legend( 'topright',
legend=c ('xi= 0.235^2',
'xi= 0.245^2',
'xi= 0.255^2',
'xi= 0.265^2',
'xi= 0.275^2',
'xi= 0.285^2'),
col = c('black', clr), lty=1)
title( 'Sensitivity on Xi')
T<-0.041
params <- list(S0=1, xi=0.235^2, eta=1.9, alpha=-0.43, rho=-0.9)
finalPrices<- hybridScheme(params)(1e4, 400, 1, 0.041)
k<-5
clr<- rainbow(k)
finalP<- list()
for (i in 1:k){
param<- params
param$xi<- (sqrt(param$xi)+0.03*i)^2
#print(i)
finalP[[i]]<- hybridScheme(param)(paths, n,1,T)
}
save(finalP, file='finalP_xi.rData')
curve(ImpliedVol(x, finalPrices), from=-0.4, to=0.2, col='black',
xlab="Log strike", ylab="Implied Vol", ylim= c(0.1, 0.55) ,lwd=2)
print(ImpliedVol(0, finalPrices))
for (i in 1:k){
curve(ImpliedVol(x, finalP[[i]]),from=-0.15, to=0.1, add=TRUE, col=clr[i], lwd=2)
print(ImpliedVol(0, finalP[[i]]))
}
legend( 'topright',
legend=c ('xi= 0.235^2',
'xi= 0.245^2',
'xi= 0.255^2',
'xi= 0.265^2',
'xi= 0.275^2',
'xi= 0.285^2'),
col = c('black', clr), lty=1)
title( 'Sensitivity on Xi')
T<-0.041
params <- list(S0=1, xi=0.235^2, eta=1.9, alpha=-0.43, rho=-0.9)
finalPrices<- hybridScheme(params)(1e4, 400, 1, 0.041)
k<-5
clr<- rainbow(k)
finalP<- list()
for (i in 1:k){
param<- params
param$xi<- (sqrt(param$xi)+0.04*i)^2
#print(i)
finalP[[i]]<- hybridScheme(param)(paths, n,1,T)
}
save(finalP, file='finalP_xi.rData')
curve(ImpliedVol(x, finalPrices), from=-0.4, to=0.2, col='black',
xlab="Log strike", ylab="Implied Vol", ylim= c(0.1, 0.55) ,lwd=2)
print(ImpliedVol(0, finalPrices))
for (i in 1:k){
curve(ImpliedVol(x, finalP[[i]]),from=-0.15, to=0.1, add=TRUE, col=clr[i], lwd=2)
print(ImpliedVol(0, finalP[[i]]))
}
legend( 'topright',
legend=c ('xi= 0.235^2',
'xi= 0.245^2',
'xi= 0.255^2',
'xi= 0.265^2',
'xi= 0.275^2',
'xi= 0.285^2'),
col = c('black', clr), lty=1)
title( 'Sensitivity on Xi')
optionData<- spxOptData[spxOptData$Texp>0.03 & spxOptData$Texp< 0.043, ]
head(optionData)
params[1,]
params
params[1]<- params
paranms
params
params[1]
params[1,]
params<-matrix(params, nrow=1)
params
colnames(params)<- c('S0', 'xi', 'eta', 'alpha', 'rho')
params
plotIvols_svibss(optionData, paths = 1e4, n = 400, bssMatrix = params)
plotIvols_svibss(optionData, paths = 1e4, n = 400, bssMatrix = params, kappa = 1)
params[1,]$rho<- -.94
params
plotIvols_svibss(optionData, paths = 1e4, n = 400, bssMatrix = params, kappa = 1)
params[1,]$rho<- -.99
plotIvols_svibss(optionData, paths = 1e4, n = 400, bssMatrix = params, kappa = 1)
params[1,]$xi<- 0.08
plotIvols_svibss(optionData, paths = 1e4, n = 400, bssMatrix = params, kappa = 1)
params[1,]$xi<- 0.1
params
plotIvols_svibss(optionData, paths = 1e4, n = 400, bssMatrix = params, kappa = 1)
plotIvols_svibss(spxOptData)
params
rep(params,3)
tmp<- unlist(params[1,])
tmp
tmp[1]
tmp[3]
tmp5
tmp[6]
tmp<-c(1,0.1, 1.9, -0.43, -0.99)
params<- matrix (rep(tmp, 14), nrow = 14, byrow = T)
params
colnames(params)<- c('S0', 'xi', 'eta', 'alpha', 'rho')
params
plotIvols_svibss(ivolData = spxOptData, paths= 1e4, n = 300, kappa = 1)
plotIvols_svibss(ivolData = spxOptData, paths= 1e4, n = 300, kappa = 1, bssMatrix = params)
params[1,]
params[1,]$S0
params<- as.data.frame(params)
params
params[1,]
params[1,]$S0
plotIvols_svibss(ivolData = spxOptData, paths= 1e4, n = 300, kappa = 1, bssMatrix = params)
plotIvols_svibss(ivolData = spxOptData, paths= 1e4, n = 300, kappa = 1, bssMatrix = params)
params[3,]
params[3,]$rho
params[3,]$eta
params[3,]$alpha
params[3,]$S0
params[3,]$xi
optionData<- spxOptData[spxOptData$Texp<0.01, ]
plotIvols_svibss(ivolData = optionData, paths= 1e4, n = 300, kappa = 1, bssMatrix = params)
optionData<- spxOptData[spxOptData$Texp>0.03, ]
plotIvols_svibss(ivolData = optionData, paths= 1e4, n = 300, kappa = 1, bssMatrix = params)
params$alpha<- rep(-0.38, 14)
plotIvols_svibss(ivolData = optionData, paths= 1e4, n = 300, kappa = 1, bssMatrix = params)
